"""
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
"""

"""
注意事项：
1）在一个循环中结束，注意更新son字符串，遇到相同时截断
2）循环结束后可能一直在if条件中，未到else于是最后一次长度未统计
"""
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        maxlen = -1
        son = ''
        for index, ls in enumerate(s):
            if ls not in son:
                son += ls
            else:
                maxlen = max(maxlen, len(son))
                son = son[son.find(ls) + 1: ] + ls ##此处别忘记累加新值
        maxlen = max(maxlen, len(son))
        return maxlen
